// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package wire

import (
	"example-go-nunu/internal/repository"
	"example-go-nunu/internal/server"
	"example-go-nunu/internal/service"
	"example-go-nunu/pkg/app"
	"example-go-nunu/pkg/jwt"
	"example-go-nunu/pkg/log"
	"example-go-nunu/pkg/sid"
	"github.com/google/wire"
	"github.com/spf13/viper"
)

// Injectors from wire.go:

func NewWire(viperViper *viper.Viper, logger *log.Logger) (*app.App, func(), error) {
	db := repository.NewDB(viperViper, logger)
	repositoryRepository := repository.NewRepository(logger, db)
	transaction := repository.NewTransaction(repositoryRepository)
	sidSid := sid.NewSid()
	jwtJWT := jwt.NewJwt(viperViper)
	serviceService := service.NewService(transaction, logger, sidSid, jwtJWT)
	tqAppRepository := repository.NewTqAppRepository(repositoryRepository)
	tqAppService := service.NewTqAppService(serviceService, tqAppRepository)
	task := server.NewTask(logger, tqAppService)
	appApp := newApp(task)
	return appApp, func() {
	}, nil
}

// wire.go:

var repositorySet = wire.NewSet(repository.NewDB, repository.NewRepository, repository.NewTransaction, repository.NewUserRepository, repository.NewTqAppRepository, repository.NewTqDeveloperRepository)

var serviceSet = wire.NewSet(service.NewService, service.NewUserService, service.NewTqAppService, service.NewTqDeveloperService)

var serverSet = wire.NewSet(server.NewTask)

// build App
func newApp(
	task *server.Task,
) *app.App {
	return app.NewApp(app.WithServer(task), app.WithName("demo-task"))
}
